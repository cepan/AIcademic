{
    "0-20": " welcome back to mining of massive datasets we continue our discussion of online algorithms now we just warmed up by looking at an online algorithm called a greedy algorithm for the bipartite graph matching problem we're going to look now at an application of online algorithms which is performance based advertising and in particular we're going to look at a problem called the AdWords problem",
    "20-40": " let's start with the short history of advertising on the web now from you know the web advertising started almost simultaneously with the world wide web itself and the early days of the web the only kind of ads that you see online about banner ads and these reign supreme from till about 2001 and banded ad so",
    "40-60": " very very simple they were graphical units that you saw on web pages and popular websites charged a certain number of dollars for every thousand impressions of the ad this is called the the CPM rate or the cost per thousand impressions where m is the Roman numeral",
    "60-80": " four for a thousand and that's why it's called a CPM rate and this this model comes to us from TV or magazine ads which are priced similarly based on the circulation of the magazine or the or the number of viewers of the TV show and this was a good initial model to start",
    "80-100": " off with but it doesn't really you know exploit a lot of information that we have available on the web that we don't have have available you know on TV or in a magazine ad in particular these ads are very very untargeted so the same ad is shown to everyone who comes to a website or or sees a particular page in",
    "100-120": " our website and so these ads not surprisingly perform really really poorly now how do you measure performance typically advertisers measure performance of ads by looking at how many people click on on the ad what they look at is what's called the click-through rate which is the ratio of number of clicks the ad receives divided",
    "120-140": " by the number of impressions of that ad remember impressions are what the advertiser is paying for in the CPM rate and the clicks are what they want and so they measure the return on advertiser return investment or ROI by looking at the ratio of clicks to impressions not",
    "140-160": " surprisingly the early banner ads which are completely untargeted have very low click-through rates and very low ROI for advertisers and this sort of prompted a move of banner advertising that they went from untargeted and then kind of moved to demographically targeted you can sort of get demographic information",
    "160-180": " broad demographic information about the kinds of people who are likely to see a given web page and target ads to those people for example you can place automotive ads on a site about car repair for instance right so you can sort of broadly demographically target ads to do specific to specific websites",
    "180-200": " but in general these articles don't perform really well because they are very broadly targeted now all this change with with the advent of next new form of advertising called performance based advertising and performance based advertising was first introduced by a",
    "200-220": " company called overture around the year 2000 now a lot of you may not remember overture but it was another search engine you know that existed around the year 2000 and their innovation at overture was that they allowed",
    "220-240": " advertisers to bid on search keywords so people searched on overture much as they searched on search engines like Google and Bing today and advertisers bid to appear you know on those search results by bidding on specific search keywords and when somebody searches for that keyword then overture used to show the",
    "240-260": " ad of the highest bidder followed by the actual search results but the key innovation that overture made was the advertisers was charged only if the ad was actually clicked on right the advertiser did not charge you know did not pay for the impression but they paid only for the click and so this is called",
    "260-280": " performance-based our advertising or cost per click advertising to distinguish it from the the the impression based or CPM advertising that preceded it now it turned out that advertisers really liked performance-based advertising or CPC advertising and and overture did really",
    "280-300": " well and ended up being acquired by by Yahoo much later on however Google which was another search engine is just getting started on roughly the same time you know adopted a very similar model to overtures around 2002 and they call it AdWords now we are all familiar with",
    "300-320": " AdWords when we search on Google today when we see these see these ads on Google which are ads that are targeted to the searches that we do and the the idea originally came from from overture and was then adopted by Google and as you see we will made some important",
    "320-340": " changes to the overture model in terms of how advertisers bid and what ads gets shown now it turns out that performance-based aisle advertising actually works advertisers really like to pay only for clicks are supposed to impressions and so it is a multi-billion",
    "340-360": " dollar industry primarily around search marketing and there are a number of algorithmic challenges around performance-based advertising there are you know the roughly fall into two buckets the first bucket is from the point of view of a search engine which",
    "360-380": " is what ads do I show for a given query and that's the topic of today's lecture the second set of challenges come from an advertiser point of view and the problem here is a feminine vert Iser which search term should I bid on and how much should I bid for the search term now this is not the focus of today's lecture but it's in fact a very",
    "380-400": " important problem and there's an entire industry segment that focuses around this problem as well so we formalize the the problem of from the search engines point of view we call it the AdWords problem because it was originally formulated in the context of Google's AdWords",
    "400-420": " and in the AdWords problem a stream of queries arrives at a search engine and let's let's say that's Q 1 Q 2 Q 3 and so on and in general a search engine knows the query that has seen so far but kr predict the queries it's going to see next now several advertisers have been on",
    "420-440": " each search query when a query Qi arrives the search engine must pick a subset of advertisers whose ads are shown right when you search there's a number of advertisers who bid for that keyword now there's usually a larger set of advertisers or a bid for a keyword",
    "440-460": " then the search engine can show most search engines have a policy that that they will show at most one ad or two ads or three ads for each search query there may be tens or hundreds of bidders for each search query so the search engine must decide which subset of advertisers it will pick and show their ads for that search query I don't remember this looks",
    "460-480": " very very similar to the model for bipartite graph matching and it's no coincidence the goal is to maximize the search engines revenues by showing the the appropriate set of ads and clearly we need an online algorithm in this case",
    "480-500": " because the search engine can only see one query at a time and it must make an irrevocable decision of deciding which I had to show but it cannot go back and change the ads it showed in the past nor does it know what queries are going to come in the future so we need an online algorithm for this problem very similar",
    "500-520": " to the algorithm that we had for the bipartite graph matching problem now it turns out that there is a very simple heuristic that you can use to create an online algorithm for the AdWords problem and that heuristic is called expected revenue let's first look at a very simple example let's say we have a particular query Q and we have three",
    "520-540": " advertisers a b and c who each bid on query Q and their bids are shown in this table here advertiser a has been $1 for each click be held bid 75 cents for each click and advertiser C has been 50 cents per click remember now these are bits per click so",
    "540-560": " if the surgeon decides to show advertiser a sad then advertiser a piece if there is a click at that time they advertise the a doesn't pay anything if the user doesn't click on the ad but the ad just gets shown right now the search engine doesn't know a priori whether the ad is going to get cleaned or not so",
    "560-580": " this simple heuristic that nobody used when they first introduced you know performance-based advertising was to just show the the ad from the highest paying advertiser they used to sort advertisers by bid as shown here and you",
    "580-600": " know from top to bottom so advertise a a a has the highest bid advertiser B has a second highest bid but Isis he has the third highest bid so if I'm going to show you an ad I might as well show advertisers a sad because I'd better at the Tison a he was willing to pay the most for clear per click well you know",
    "600-620": " if I'm going to show two ads I should just show advertisers a and B's ads but Nazis because a and B are both willing to pay more than C for each click so this is a simple heuristic that which are used for you know for for deciding which ads to show now it turns out that",
    "620-640": " this is not the optimal algorithm for this for the scenario and the the important reason is that ads behave very differently in terms of how they get clicked so what we should instead measure is something called the click-through rate of each ad now",
    "640-660": " suppose advertisers A's ads on average let's say be sure to show all these ads many many times and measure how often they click let's say advertiser ACE ads that clicked one person of the kind B's ads that click two percent of the time and cease ads are clicked two point five percent of the time right now if I show",
    "660-680": " advertiser a sad and it's just click one percent of the time then each time I show advertisers is ad there's a 1% chance it's going to be clicked and if it does get click I get paid a dollar and so my expected revenue from showing advertisers azad is $1 times 1% which is",
    "680-700": " a penny right and similarly my expected revenue from showing advertisers bees at once is 75 cents times 2 percent and and similarly for C my expected revenue is 50 cents times two and a half percent and so we can go ahead and compute the",
    "700-720": " expected revenue for each advertiser by multiplying the bid and a CTR and in this case we find out that the expected revenue for advertiser a is one cent the expected revenue for advertiser B is one point five cents and the expected revenue for advertisers C is one point one two five cents right now the important innovation that Google",
    "720-740": " did that over you know beyond the model that overture had introduced was to observe this and notice that it's much better to sort advertisers by expected revenue than it is to sort them by bit right so when you sought by bid you place advertiser",
    "740-760": " a first there has been is sought by expected revenue you observe that advertiser D is actually much better advertiser advertisers act is show so we just have to show one ad you'd much rather show advertisers be sad because that expected revenue is one point five cents I suppose to showing advertisers a sad",
    "760-780": " the way the expected revenue is just to one cent so so in fact if we sought by by expected revenue rather than actual bid amount you get a different sort order with BC a instead of ABC and this is in fact the AdWords innovation that",
    "780-800": " Google introduced it turns out that sorting my expected revenue is a very very good heuristic and it it works well for the AdWords problem now it turns out though that there are a few more constraint in the AdWords problem that the just the sorting by",
    "800-820": " expected revenue doesn't solve let's look at some of those those constraints so let's formally state the AdWords problem we are given a set of bids by advertisers for search queries now we just look at one search query but in general remember there are many many search queries and there are many many",
    "820-840": " advertisers and each advertiser bids for some set of search queries so so there's a set of bids by advertiser for advertisers for search queries you can think of this as a bipartite graph with advertisers on one side and search queries on the other and the read just between advertisers and search queries we are also given a click-through rate",
    "840-860": " for each advertiser query pair that that has been estimated now the new thing that we haven't seen so far is that each advertiser has a budget right now advertisers don't have infinite advertising budget you know advertiser might say look I'm willing to spend at most $1,000 a day or",
    "860-880": " at most when we spend a hundred thousand dollars a month or a million dollars a month but there is always a limit to how much an advertiser can spend which is defined by their advertising budget so each advertiser has a budget which they which they tell the search engine now the search engine also has a limit on",
    "880-900": " the number of ads we displayed with each search grade right for example the search engine may say look I'm going to show at most one AD for each search query or two or three now in some modern search engines a number of ads actually depends on the kind of query as well but the simple scenario let's imagine that there is a fixed limit on the number of ads being",
    "900-920": " displayed with each search query now the AdWords problem is then given all these to respond to each search query with a set of ads and we have to find the set of ads so that the size of the set there's no law no larger than the limit of the number of ads burberry right and we also have to make sure that the only",
    "920-940": " shoe advertisers who've actually bid for the search query otherwise we are not going to get paid and finally and most critically we have to make sure that not only has has the advertiser bid on the query but the advertiser has budget left over to pay for the ad if it is actually clicked upon and if you show an ad from an",
    "940-960": " advertiser whose budget has been exhausted because lots of ads have been clicked on from the advertiser then if somebody clicks on the ad then the advertiser doesn't have enough budget left over to pay for the ad when it's clicked then the first engine doesn't get paid so there's no point showing that advertiser side so once the the",
    "960-980": " budget of an advertiser has been exhausted we can effectively assume that the advertiser is out of the game and it's no longer bidding on on any any search queries so the AdWords problem is therefore to find a set of ads for each search query that satisfy these these criteria so here's a simple algorithm",
    "980-1000": " that we've seen which was a sort by expected revenue which is bit time CTR and it turns out that if the CTR of each is known and if advertisers have unlimited budgets then the simple algorithm which is to sort by expected revenue is actually optimal however advertisers don't have unlimited budgets",
    "1000-1020": " in practice and the CTR of an ad is unknown and so we have to do something different let's start with problem 1 which is to estimate the click-through rate of an ad and in the next lecture we look at an algorithm called balance which deals with the fact that advertisers have limited budgets to look",
    "1020-1040": " at the problem of estimating the click-through rate of an ad now this looks like a very simple problem all you have to do is to measure the click-through rate of a query AG pair historically we said we just have to show an ad a large number of times right let's say a thousand or 10,000 and we",
    "1040-1060": " had to measure the number of clicks for that add query hat pair and then we have the CTR for the query query ad pair and so far so good this is in fact the right way to do it but there are a couple of challenges which we actually won't have time to cover in this lecture",
    "1060-1080": " the first is that the click-through rate is actually position dependent so remember the search engine may show more than one ad for a given query so an ad that's shown in position one definitely gets more clicks than an ad that shown in position number two right so so therefore we actually have to measure the click-through rate for a query ad",
    "1080-1100": " pair for each position not just for a cleared pair because the kick 3tr is position dependent and the second problem that we have is something called explore we exploit trade off now imagine that we have a lot of ads for a given query and we show we've shown them a lot and we know they CTR and now a new",
    "1100-1120": " advertiser comes in and also bids on the query now we don't know the CTR of the new ad however any be we know the CTO of the old ads now should we show the new ad at all and take the risk that it doesn't get clicked on much and we lose some revenue or should we just ignore",
    "1120-1140": " the new ad just go with the ads that we already know their CTR and keep showing them to optimize revenue right should we just exploit the known information the known CTR is the known ads or should we explore what the new ad that's perhaps the new ad is really good and has a high CTR but we don't know perhaps it's actually bad and has a low CTR",
    "1140-1160": " so this problem is called explore we exploit trade-off and there's it's it's a very richly studied branch of you know research which again we won't have time to cover in this lecture we will just assume that we know the click-through rate for each query ad pair because it's been given to us"
}