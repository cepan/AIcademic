{
    "0-20": " now we're ready to learn and apply the idea of locality sensitive hashing we're going to do this first for the special case of Minash signatures and later see the general lsh idea first let's remember where we've gotten so far we converted documents to sets of shingles and then we converted the presumably large sets of shingles to",
    "20-40": " short signatures consisting of vectors of integers we can compare two signatures and estimate quite closely the jard SIM ity of their underlying sets since the signatures are relatively short we can fit many of them into main memory at once and thus compare many different pairs of th signatures without having to spend the time needed to read",
    "40-60": " each signature from dis many times the idea behind lsh is to look at the collection of elements that is signatures in our example here whose similar pairs we want to find and without constructing all pairs of those elements create a short list of candidate pairs whose similarity",
    "60-80": " actually must be measured when constructing candidate pairs we look only at individual elements not at the pairs themselves all pairs that are not candidates are assumed not to be similar even though in rare cases there will indeed be false negatives that is pairs that are similar but never checked for similarity for the cases of signature",
    "80-100": " matrices we perform lsh by creating some large number of hash functions these are ordinary hash functions not Min hash functions for each selected hash function we hash columns to buckets for each bucket we make all pairs within that bucket a candidate pair a pair becomes a",
    "100-120": " candidate pair if any one or more of the hash functions puts both signatures in the same bucket okay we need to tune the number of hash functions and the number of buckets for each hash function so that the buckets have relatively few signatures in them that way there are not too many candidate pairs generated but we can't use too many buckets or",
    "120-140": " else pairs that are truly similar will not wind up in the same bucket for even one of the hash functions we use to start we have to agree on how similar is similar we pick a threshold T that is the minimum value of jard similarity for us to regard a pair of signatures as",
    "140-160": " similar that is in the ideal World columns C and D of the signature Matrix M would be a candidate pair if and only if there's similar was at least T remember that the similarity of signatures is the fraction of components or rows of the signature Matrix M on",
    "160-180": " which they agree so we want column C and D to be a candidate pair if the fraction of rows I for which M of I and C and M of I and D are the same to be at least T so we need to create some number of hash",
    "180-200": " functions and use each to Hash The Columns of signature Matrix M into buckets and we need a trick to make sure that similar signatures or columns are much more likely to Hash to the same bucket for one of these hash functions than if the signatures are dissimilar as we mentioned before we're going to regard a pair of signatures as a candidate pair if even one of the hash",
    "200-220": " functions puts them in the same bucket so here's the picture of how the hash functions are created the yellow area is the signature Matrix M each column corresponds to one signature and each row is one of the components of all signatures that is",
    "220-240": " each row was created by applying to each of the underlying sets one of the Minash functions we used to create the signatures in the first place we divide the rows into B bands for some number B as a result there are R rows per band where B * R is the total length of the signatures that is the",
    "240-260": " number of Minash functions we use to create the signatures we're going to create one hash function from each band remember we divided the signature Matrix M into B bands of R rows each from each band we create a hash function this hash function hashes the values that a given column has in that",
    "260-280": " band Only ideally we would make one bucket for each possible Vector of B values that a column could have in that band that is we'd like to have so many buckets that the hash function is really the identity function but that is probably too many buckets for example if B equals 5 and the components of a",
    "280-300": " signature are 32-bit integers then there would be 2 to the 5 * 32 or 2 to the 160th power buckets uh we can't even look at all these buckets to see what is in them at the end uh so we'll probably want to pick a number of buckets that are smaller say a million or a billion",
    "300-320": " as we said we consider a pair of columns or signatures to be a candidate pair if they are in the same bucket according to the hash function for any of the Bands put another way the only way we can be sure a pair of signatures will become a candidate pair is if they if they have exactly the same components in at least one of the Bands notice that if",
    "320-340": " most of the components of two signatures agree then there's a good chance that they will have 100% agreement in some band but if they have few components in common then they are unlikely to agree 100% in any band we'll make the mathematics more precise shortly but that's the intuition given T the",
    "340-360": " threshold your card similarity needed for pairs to be considered similar we need to tune BNR so that most of the similar pairs are 100% similar in at least one band but few of the pairs with a CH card similarity less than T are 100% similar in any band the only constraint we have is that b * R has has to equal the length of the signatures",
    "360-380": " that is equal to the number of Minash functions we used to create the signatures in the first place in intuitively if we make B large and R small then there are lots of bands and therefore lots of opportunities for a pair to wind up in the same bucket and since R the width of a band is small it is not hard for a",
    "380-400": " pair to Hash to the same bucket for one of the Bands thus making B large is good at the similarity if the similarity threshold is relatively low L uh conversely if we make B small and r large then it will be very hard for two signatures to Hash to the same bucket for a given band and there are few bands to give them the opportunity to do so",
    "400-420": " thus a small number of bands is best if we have a high threshold of similarity again we'll make the math precise shortly before we go on here's a picture of what one of the hash functions for lsh on signature matrices looks like we we see one of the B bands the band",
    "420-440": " consisting of R rows of course uh we also show The Matrix consisting of several of seven columns uh or signatures and each of the purple rep rectangles represents the portion of its column within the one band we focus",
    "440-460": " on now columns six and seven hash to different buckets thus they surely differ within this band so we are not motivated to compare them for similarity that is the pair six and seven is not made a candidate Pair by this lsh hash function perhaps column six and seven will hash the same bucket for some other",
    "460-480": " hash function and will the therefore become a candidate pair from more but from what we can tell looking only at this one hashing they do not form a candidate pair on the other hand columns two and six do hash to the same bucket so two and six is candidate pair regardless of",
    "480-500": " what happens in the other bands there's a good chance that columns 2 and six are identical within the band shown uh that is uh these pieces of their columns uh are identical uh there is a small chance that these segments of",
    "500-520": " these columns are not identical but they just happen to Hash to the same bucket uh we will generally neglect that probability as it can be made tiny like one in four billion if we use 2 to the 32nd power uh buckets let's look at a particular example to get a feel for how the probabilities of false positives and",
    "520-540": " negatives work out in practice we'll assume there are 100,000 columns that is we're looking for similar documents among a set of 100,000 documents we'll assume signatures are of length 100 that is we use the 100 Minash functions to create the signatures the signature Matrix m is thus 100 rows by",
    "540-560": " 100,000 columns notice that the signatures fit very nicely in main memory assuming the components of a signature are 4 byte integers each signature takes 400 bytes and the total space requirement is 40 megabytes now let the similarity",
    "560-580": " threshold be 80% that is we consider a pair of signatures similar if and only if they agree in at least 80 of their 100 components there are approximately 5 billion pairs to compare so would' like to use lsh to avoid having to compare them all incidentally if you don't see why 5 billion is the approximate count of",
    "580-600": " pairs the exact number of pairs of items chosen from 100,000 items is 100,000 choose two uh which is 100,000 time 999 999 ided two uh and if",
    "600-620": " we approximate uh the 59 by 100,000 we get exactly 5 billion in our example we're going to divide uh the 100 rows of signature M of the signature Matrix uh into 20 bands",
    "620-640": " with five rows each first let's consider two columns C1 and C2 that represent sets with jard similarity 0.8 notice that because of the randomness involved in Min hashing The Columns C1 and C2 may agree and more or fewer than 80 of their rows but they",
    "640-660": " will most likely have approximately 80 equal rows now what is the probability that these columns are 100% similar in one given band well the probability that they agree in any one row is exactly 0.8 remember that the probability that a Minash function agrees on two sets equals the jard similarity of the",
    "660-680": " underlying sets so the probability that the two columns agree in all five of the rows of a band is 0.8 raised to the 5th power or approximately 328 uh that's not a very high probability but we have 20 chances to make the pair of columns a candidate",
    "680-700": " pair the probability that they do not hash to the same bucket in one band is one minus 328 or uh Point uh uh 672 okay okay but the probability that the",
    "700-720": " columns fail to has to the same bucket for any of the 20 bands is that value 672 raised the 20th power which is a tiny number it's actually this 0.0035 the chance that pair C1 and C2",
    "720-740": " will be a candidate pair is one minus that or Point 99965 put another way the probability of a false negative a pair of sets that have jard similarity 80% but whose signatures do not become a candidate",
    "740-760": " pair is 0.0035 or about 1 and 3,000 now look at a pair of sets that have jard similarity 0.4 the probability that signatures are identical in a given band is 0.4 to the 5ifth power or about 1% the probability that their signatures",
    "760-780": " hash to the same bucket in at least one of the 20 bands is surely no more than 20 times that or 20% uh that's that's not great it means that among 40% similar underlying sets there are 20% false positives pairs of signatures we will have to compare pair and yet we'll find that they are not at",
    "780-800": " least 80% similar similar uh but 20% false positives is bad but the false positive rate Falls rapidly as the similarity of underlying sets decreases for example for 20% jard similarity uh we get less than 1% false",
    "800-820": " positives we cannot determine the exact number of false positives because that depends on the distribution of jard similarities among the underlying sets for example if most pairs of sets were 79% similar almost all would be false positives but if the typical pair of sets has a jard similarity of a few",
    "820-840": " percent then there would be almost no false positives a way to look at the problem of designing an lsh scheme from a Minash Matrix is this we want the probability of two columns sharing a bucket to be a step function with threshold t equal equ to the value at which we regard the",
    "840-860": " underlying sets similar that is if the jakar similarity s of the underlying sets is less than T we want there to be zero chance the signatures will share a bucket for one of the hashing and thus become a candidate pair however if the underlying to current similarity exceeds two we want",
    "860-880": " the pair of signatures surely to become a candidate pair on the other hand what does a single row of a signature Matrix gives us it it gives us a straight line the justification is the theorem about the probability of two men hash values equaling theard similarity of the",
    "880-900": " underlying sets that's not too bad at least the probability goes in the right direction but it does leave a lot of false positives and negatives that is for given threshold T all of these are false positives and all of these are false negatives",
    "900-920": " but when we combine many Minash functions into B bands of R rows each we begin to get an S curve shape uh with greatly reduced false positive and negative regions we're going to derive the function that relates the probability of two sets having the signatures become a candidate pair to the similarity s of the",
    "920-940": " sets first if the underlying sets have deard similarity s then the probability that their signatures will be identical and all R rows of one particular band is s to the R so the probability that their signatures will not be equal in this band is 1 minus s to the",
    "940-960": " r and the probability that their signatures will be unequal in each of the B bands is that raised to the be power finally the probability that their signatures will agree in at least one b and is 1 minus that or 1 minus the",
    "960-980": " quantity 1 - s the r all raised to the B power okay as B and R get large this function increasingly resembles a step function and the Threshold at which the rise occurs is approximately 1 over B",
    "980-1000": " raised to the^ 1 / R for example in the case uh Bal 20 and Ral 5 the threshold will be approximately the fifth root of 12th which is about 0.55 here are some sample values of this S curve for the case we've been examining 20 bands of five rows each",
    "1000-1020": " it's not exactly a step function but it does get rather steep in the middle for example look at the values between 0 4 and 6 the rise from 4 to 6 is more than uh 6 so the a average slope in this region is",
    "1020-1040": " over three on the other hand in the region 0 to4 uh the rise is less than 0.2 and the same can be said for the region from 6 uh to one that is the slope is less than 1/2 in both these regions so a rough approximation to this curve uh looks",
    "1040-1060": " like like this okay it's not exactly a step function but much better than the linear function we got from a single row so here's a summary of what we need to do to find sets with a given threshold T of jard similarity first we",
    "1060-1080": " need to decide on our values of B and R as we mentioned the threshold T will be approximately 1 over B to the^ 1 / R but there are many suitable values of B and R for a given threshold the larger we make BN r that is the longer the signatures we use the Clos closer the S curve will be to a step",
    "1080-1100": " function and therefore the fewer false positives and negatives we can have but the longer we make the signatures the more space they will take and the more work it will be to perform all the Min hasing then we must run the lsh to get the candidate pairs for each candidate pair we examine their signatures and",
    "1100-1120": " count the number of components in which they agree that way we can determine whether the similarity of the signatures really does reach or exceed the threshold T we can rely on the similarity of the signature as truly measuring the card similarity of the underlying sets uh",
    "1120-1140": " however if we want to spend the resources we can go to the sets themselves after determining that their signatures are sufficiently similar in some cases the similarity of the signatures will overestimate the similarities of the sets that they represent so it is possible that the two sets are not really similar enough by Computing the jard similarity of the",
    "1140-1160": " underlying sets we can eliminate the false positives unfortunately we cannot eliminate false negatives this way if two sets have deard similarity above threshold but by bad luck their signatures uh never become a candidate pair then we'll never look at this pair of signatures or their underlying",
    "1160-1180": " sets"
}