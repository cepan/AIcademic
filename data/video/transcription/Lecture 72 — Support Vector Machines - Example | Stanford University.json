{
    "0-20": " so to finish our discussion of support Vector machines I will run through a small example and also show you the interesting side benefit we got by using uh support Vector machines and stochastic ring descent to do our optimization so let's think about a new setting and we will call this setting",
    "20-40": " the online learning case where the idea is that we want to model problems where we have a continuous stream of data and our we want our Alor ithm to kind of learn from this stream and slowly adapt to the changes of in the data so imagine we are basically receiving data one after another and the data is slowly",
    "40-60": " shifting over time and we would like our model to learn these slow shifts and AD adapt to them so the idea we'll be using is is to slowly update the model as the data is arriving arriving in and what we notice here is actually that in our svm formulation we made so far when ever a",
    "60-80": " training example came in we can think of it that we classify it then we see whether we classified it correctly or not and if we misclassified it then we computed the the the gradi the value of the gradient was non zero and we would make a step this was in the formulation of the stochastic gradient desent so our idea here we can think of it the following right we can think that we",
    "80-100": " first train the classifier on the training data and then you know for every for every example that comes from the stream if if we me if we misclassify this training example we update uh the model using a kind of a very small learning rate right we just want to slightly update the model so let's consider a small example",
    "100-120": " of how this online learning case would work so let's think that we are operating a shipping service and imagine that we operate in a case where customers come come to our office um and they tell us uh the package that they would like to ship from some origin to some destination and what we would like to do is we would like to offer them",
    "120-140": " some uh some price let's say we offer them some um value for how much the shipping would cost and then based on this price um sometimes the user or the customer will decide to use our service and sometimes they will decide not to use it and um they will go somewhere else right so we can this means that",
    "140-160": " kind of every customer every origin destination point and description of the package is a training example and then the the classification that we want to make is given the price we suggest is is the user going or the customer going to accept that offer or are they going not to accept the offer so X describes the",
    "160-180": " customer the price and the package and Y says whether the customer is going to accept our price or not so the task now is we want to build an algorithm to optimize what price should we offer uh to the user um as I mentioned features X simply capture the information about the",
    "180-200": " user and the origin Destin information about the origin destination and the problem is given a price is the user going to accept it or not so how would we go attack this problem we could use lots of historical data where we would say uh where we would use our features to be of the type of something about the",
    "200-220": " user something about the origin something about the destination and the price reset and then Y is simply a plus one if the that user or that customer accepted our offer and minus one if they haven't and we would want to find the function f that Bas on the AIS predicts the wi we could for example use support",
    "220-240": " Vector machine we would train the support Vector machine on some um on some data and then we would go and deploy this model on our let's say website or in our store however one important thing here to notice that the website is running continuously and as the website runs maybe you know the economy changes um over time which means",
    "240-260": " that some at some point in time people are a bit richer and they are willing to pay a bit more and at sometimes they are maybe willing to pay a bit less as the time goes on so instead of kind of thinking about training a classifier building the model and then freezing it and shipping it off to the to our website or to our store here is how we would think of this in an online uh",
    "260-280": " learning setting where the idea of the algorithm would be to some to do something as follows a user comes to to our store we represent um user as a x comma y pair where X are the features and Y is whether uh the user choose our service or not um based on the decision",
    "280-300": " of the of the user of the customer we update our weight Vector W using just the customer we saw and uh by making small updates to the to the V to the parameter Vector w we slowly adapt to the changes in our customer BAS",
    "300-320": " so what did we do here is basically we discarded the idea of the training set and instead we have now we think of a continuous stream of data when what when whenever a user comes to our uh store if we correctly classified the user we are okay if we misclassify the user we update our model a bit and when I say",
    "320-340": " correctly classified or not it means did we suggest the price that the user uh picked and was happy with or did we choose the wrong price um of course there are some further things we have to think about um right the the first one is that um in a major website that like like ours would be we would have um a",
    "340-360": " massive stream stream of data and as as we are training as more data comes in our model gets better and better which is great um what is also good in this online learning setting is that all we need to do is look at one example at a time so we don't really need to deal with all the training data at once so this is another kind of um um benefit of",
    "360-380": " stochastic gradient descent where we are only looking at one data point at a time and um if if what we can do for example if we don't have a lot of data then we can run stochastic gradient descent while traversing over the same set of data multiple times right in multiple rounds until our algorithm um would",
    "380-400": " converge so to summarize uh online algorithms can adapt to changing in user preferences for example over times you know user users may become more price sensitive um this means that algorithms can adapt to data and and learn these kind of changes and um in this sense the",
    "400-420": " uh model becomes Dynamic and also the underlying system is dynamic and this is kind of the side benefit of the way we trained our um support Vector machine using stochastic gradient descend which basically means that whenever a new data point comes in um we classify it learn the class and we can slightly update the model so we can think of this as kind of",
    "420-440": " the system that is always learning and never stops learning"
}