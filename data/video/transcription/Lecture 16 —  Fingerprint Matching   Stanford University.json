{
    "0-20": " the next application is that of taking a large collection of fingerprints and finding which pairs are from the same person usually fingerprint analysis is not a many-to-many problem where we have to find all matches at the same time rather we organize a database of known fingerprints and when a new fingerprint comes in we try to match it to those",
    "20-40": " we've seen before however the LSH technique is still an excellent way to organize the database so that we have to look for matches to the new fingerprint and only a few buckets to start we should know a little about how fingerprints are represented an image of a fingerprint is examined for what are called minutiae these are",
    "40-60": " particular locations where something interesting happens to the ridges that form a fingerprint examples of where to which is merging to one or where ridges so the image of a fingerprint is replaced by a set of coordinates in a two-dimensional space when minutiae are located you place a grid over each",
    "60-80": " fingerprint image the grid must be scaled and oriented properly so that if you have two images of the same fingerprint perhaps one at a different angle or a different size the grids will overlap then you represent each fingerprint by the set of grid squares that contain minutiae since some minutiae will be right on or near a",
    "80-100": " boundary it is useful to regard such minutiae as present in the squares on both sides of the boundary so it looks like we have reduced the problem of finding matching fingerprints to the problem of finding similar sets of grid squares that have minutiae the problem is that the resulting matrix is not",
    "100-120": " sparse the grid cannot be too fine or will be unclear where minutiae belong and as a result the matrix whose rows are the grid squares and whose columns of the fingerprint sets will not be sparse that means min hashing will not work very well each min hash will have relatively few",
    "120-140": " different values so we don't get a good distribution into a large number of buckets when we do the LSH we're going to have to twist things a little bit to get LSH to work so before proceedings of the solution here's a picture of what minutiae looked like this is a case where two ridges",
    "140-160": " merge into one and the entire fingerprint has been overlaid with a grid it appears the point of merger lies within this grid square so we add that Square to the set representing the fingerprint however we might also want to add the squares that are very close to the exact point of merger because in",
    "160-180": " another image of the same fingerprint the grid might be shifted slightly to the left or down remember that we represent fingerprints by sets of grid squares those with minutiae we could min hash these sets but there is no need to the universal set is the set of grid squares and the grid is not too fine so",
    "180-200": " there might be hundreds or at most thousands of squares in the grid we can let's represent each set by a bit vector with one position for each square the ones represent squares with minutiae and if there if there are say a thousand grid squares and each bit vector takes a hundred and twenty-five bytes that's",
    "200-220": " much less space than say a vector of a hundred integer min hash values for rlsh we pick some number of sets of grid squares or components of the bit vectors that represent fingerprints in our example we'll use a thousand 24 sets of three grid squares each which seems to be a good choice for each set of three",
    "220-240": " squares we look at all the prints that have minutiae in each of these three squares in a sense we are throwing fingerprints in two buckets but each set of three squares corresponds to one bucket and unlike a hash function a fingerprint can be placed in many",
    "240-260": " buckets in fact it would be normal for a print to be placed in several buckets this way to see why the numbers we proposed make sense let's look at a typical situation we'll suppose that approximately 20% of the squares hold minutiae also suppose that if two fingerprints represent the same finger then at least 80% of the squares with",
    "260-280": " minutiae from one also have minutiae from the other the fact that we place minutiae in nearby squares if they are at the boundary helps make this assumption true let's see what it takes for the bucket corresponding to a set of three squares to receive two different fingerprints first if the fingerprints",
    "280-300": " come from different fingers then the probability that both prints are placed in this bucket is really tiny for each finger print has a 20% chance of having minutiae in each of the squares so the chance of it hitting all three is 0.2 cubed and for both fingerprints to hit",
    "300-320": " the probability is the square of that that is 0.2 to the sixth power or 0.000000 6-4 now let's look at two fingerprints that come from the same finger the probability of both being in a given bucket is much higher the reason is that there's a lot of correlation",
    "320-340": " between the buckets that will contain these prints to start for any given grid square the probability that the first print has some minutiae there is 0.2 and given that it does the probability that the other does as well is 0.8 we need to raise 0.2 times 0.8 to the third power",
    "340-360": " because there are three squares each of which need to hold minutiae from both of the prints the result is about four tenths of one percent still really tiny but 64 times larger than the probability if the prints come from different",
    "360-380": " fingers but remember we have a thousand 24 sets of three squares each in order for a pair of prints to be a candidate pair we have only to find them together in one of these thousand and twenty four buckets the probability of that happening at least one is 98 and a half percent you can do the math if you like",
    "380-400": " but there's an outline on the slide that means there are only one and a half percent false negatives on the other hand the same calculation for a pair of fingerprints that comes from different fingers is this and it gives them a much smaller value point zero six three that is there will be only 6.3 percent",
    "400-420": " false positives that's still quite expensive that means that 6.3 percent of all pairs need to be checked for similarity when almost all of them will not be similar on the other hand we did reduce I work by a factor of 15 and by using a larger number of sets of squares or perhaps 4 or 5 squares per set we can",
    "420-440": " reduce the false positive rate substantially while still keeping the false negative rate low"
}